version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg15
    container_name: postgres_db_radex
    environment:
      POSTGRES_DB: ${db_name}
      POSTGRES_USER: ${db_user}
      POSTGRES_PASSWORD: ${db_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${db_user}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis_radex
    command: redis-server --requirepass ${redis_password}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  minio:
    image: minio/minio:latest
    container_name: minio_radex
    command: server /data --console-address ":9001"
    environment:
      minio_root_user: ${minio_access_key}
      minio_root_password: ${minio_secret_key}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  app:
    build: .
    container_name: backend_radex
    ports:
      - "8000:8000"
    environment:
      database_url: postgresql://${db_user}:${db_password}@postgres:5432/${db_name}
      redis_url: redis://:${redis_password}@redis:6379/0
      okta_client_id: ${okta_client_id}
      okta_client_secret: ${okta_client_secret}
      okta_domain: ${okta_domain}
      okta_redirect_uri: ${okta_redirect_uri}
      okta_api_token: ${okta_api_token}
      okta_api_audience: ${okta_api_audience}
      minio_endpoint: ${minio_endpoint}
      minio_access_key: ${minio_access_key}
      minio_secret_key: ${minio_secret_key}
      minio_bucket: ${minio_bucket}
      jwt_secret_key: ${jwt_secret_key}
      jwt_algorithm: ${jwt_algorithm}
      jwt_expiration_minutes: ${jwt_expiration_minutes}
      openai_api_key: ${openai_api_key}
      firebase_admin_sdk_json: ${firebase_admin_sdk_json}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
    volumes:
      - ./:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
  redis_data:
  minio_data: